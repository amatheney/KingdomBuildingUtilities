Console.Out.WriteLine("I want to find a Castle: ");
		String buildingToSearchFor = "Castle";
		Console.Out.WriteLine("There are " + completeBuildingList[RoomUtilities.indexOf(buildingToSearchFor, completeBuildingList)].Furnishings.Length + " furnishings in a " + buildingToSearchFor);
		Console.Out.WriteLine(completeBuildingList[RoomUtilities.indexOf(buildingToSearchFor, completeBuildingList)].toString());


		/*Console.Out.WriteLine("Mic Check");
		Room myRoom = new Room("Alchemy Lab;10;10;0;0;10;0;Counts as an alchemist's laboratory (equipment);390;8;1;5;1;16;8;16;N/A;N/A;" +
				"\"This room aids you when you're attempting Craft (Alchemy) checks, researching new alchemist's forumulae, and performing similar tasks. " +
				"Up to three people can use the room at a time.\";N/A");
		Console.Out.WriteLine(myRoom.toString());
		
		Room modifiedRoom = myRoom.getModifiedCost(.5f);
		Console.Out.WriteLine(modifiedRoom.toString());*/
		
		//Console.Out.WriteLine("I want to find a Casino (legal): ");
		String buildingToSearchFor = "Casino (illegal)";
		Console.Out.WriteLine(completeBuildingList[RoomUtilities.indexOf(buildingToSearchFor, completeBuildingList)].limitedBuildingDescription());
		
		//int testIndex = RoomUtilities.indexOf("Clockwork Shop", completeList);
		//Console.Out.WriteLine("Index of Clockwork Shop: " + testIndex);
		//Console.Out.WriteLine("\n" + completeList[testIndex].toString());
		
		/*Room[] sampleInn = new Room[9];
		sampleInn[0] = completeList[RoomUtilities.indexOf("Bar", completeList)];
		sampleInn[1] = completeList[RoomUtilities.indexOf("Bath", completeList)];
		sampleInn[2] = completeList[RoomUtilities.indexOf("Bedroom", completeList)];
		sampleInn[3] = completeList[RoomUtilities.indexOf("Common Room", completeList)];
		sampleInn[4] = completeList[RoomUtilities.indexOf("Kitchen", completeList)];
		sampleInn[5] = completeList[RoomUtilities.indexOf("Lavatory", completeList)];
		sampleInn[6] = completeList[RoomUtilities.indexOf("Lodging", completeList)];
		sampleInn[7] = completeList[RoomUtilities.indexOf("Stall", completeList)];
		sampleInn[8] = completeList[RoomUtilities.indexOf("Storefront", completeList)];*/
		
		/*BalanceSheet totals = new BalanceSheet();
		totals.preferredIncome = "GP";
		totals = RoomUtilities.generateBalanceSheet(sampleInn, "GP");
		Console.Out.WriteLine("Totals: GP ");
		Console.Out.WriteLine(totals.toString());
		
		totals.preferredIncome = "Influence";
		totals = RoomUtilities.generateBalanceSheet(sampleInn, "Influence");
		Console.Out.WriteLine("Totals: Influence ");
		Console.Out.WriteLine(totals.toString());
		
		totals.preferredIncome = "Goods";
		totals = RoomUtilities.generateBalanceSheet(sampleInn, "Goods");
		Console.Out.WriteLine("Totals: Goods ");
		Console.Out.WriteLine(totals.toString());
		
		totals.preferredIncome = "Labor";
		totals = RoomUtilities.generateBalanceSheet(sampleInn, "Labor");
		Console.Out.WriteLine("Totals: Labor ");
		Console.Out.WriteLine(totals.toString());
		
		totals.preferredIncome = "Magic";
		totals = RoomUtilities.generateBalanceSheet(sampleInn, "Magic");
		Console.Out.WriteLine("Totals: Magic ");
		Console.Out.WriteLine(totals.toString());*/
		
		/*Room[] redRoseRooms = RoomUtilities.populateBuildingFromFile("FortRannick.txt", completeList);
		Building redRoseInn = new Building("Fort Rannick", redRoseRooms);
		String buildingOutput = redRoseInn.toString();
		Console.Out.WriteLine(buildingOutput);*/
		/*String temp = "Arena;N/A;A large public structure for competitions and team sports.;0;1;0;0;0;0;0;0;1;0;4;0;0;0;0;0;0;0;N/A;Theater;\"Brothel, Garrison, Inn, Stable, Theater\";1 Per Settlement;1 Bar/1 Bath/4 Battle Ring/1 Game Room (legal)/1 Infirmary/1 Lavatory/1 Office/1 Storage/1 Storefront;N/A;4;40";
		Building fromFileTest = new Building(temp, completeList);
		Console.Out.WriteLine(fromFileTest.limitedBuildingDescription());*/